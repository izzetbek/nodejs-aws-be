service: import-service

frameworkVersion: '2'

provider:
  name: aws
  runtime: nodejs12.x
  region: eu-west-1
  apiGateway:
    shouldStartNameWithService: true
  environment:
    AWS_NODEJS_CONNECTION_REUSE_ENABLED: 1
    SQS_URL:
      Ref: SQSQueue
    SNS_ARN:
      Ref: SNSTopic
    SNS_SUBSCRIPTION_ARN:
      Ref: SNSSubscription
    SNS_FAIL_SUBSCRIPTION_ARN:
      Ref: FailSNSSubscription
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - "s3:ListBucket"
      Resource:
        - "arn:aws:s3:::nodejs-aws-static-2"
    - Effect: "Allow"
      Action:
        - "s3:*"
      Resource:
        - "arn:aws:s3:::nodejs-aws-static-2/*"
    - Effect: "Allow"
      Action:
        - "sqs:*"
      Resource:
        - Fn::GetAtt: [ SQSQueue, Arn ]
    - Effect: "Allow"
      Action:
        - "sns:*"
      Resource:
        Ref: SNSTopic

resources:
  Resources:
    SQSQueue:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: catalogItemsQueue
    SNSTopic:
      Type: AWS::SNS::Topic
      Properties:
        TopicName: createProductTopic
    SNSSubscription:
      Type: AWS::SNS::Subscription
      Properties:
        Endpoint: izzetfatullayev93@gmail.com
        Protocol: email
        FilterPolicy:
          success:
            - true
        TopicArn:
          Ref: SNSTopic
    FailSNSSubscription:
      Type: AWS::SNS::Subscription
      Properties:
        Endpoint: zebalaw@mail.ru
        Protocol: email
        FilterPolicy:
          success:
            - false
        TopicArn:
          Ref: SNSTopic

functions:
  importProductsFile:
    handler: handler.importProductsFile
    events:
      - http:
          path: import
          method: get
          cors: true
          request:
            parameters:
              querystrings:
                name: true
  importFileParser:
    handler: handler.importFileParser
    events:
      - s3:
          bucket: nodejs-aws-static-2
          event: s3:ObjectCreated:*
          rules:
            - prefix: uploaded/
          existing: true
  catalogBatchProcess:
    handler: handler.catalogBatchProcess
    events:
      - sqs:
          batchSize: 5
          arn:
            Fn::GetAtt:
              - SQSQueue
              - Arn

plugins:
  - serverless-webpack
